# Everythings hosted off of b4t.to

# Make sure to set the following env variables
# $SEAFILE_OBSCURED_PASSWORD: Rclone obscured Seafile password

version: "3.6"
services:
  rclone:
    image: rclone/rclone
    container_name: rclone
    restart: always
    environment:
      # Configuring without a configuration file (using ENV variables with special
      # naming)
      # https://rclone.org/docs/#config-file
      # https://rclone.org/seafile/
      RCLONE_CONFIG_BATTOSEAFILE_TYPE: seafile
      RCLONE_CONFIG_BATTOSEAFILE_URL: https://seafile.b4t.to
      RCLONE_CONFIG_BATTOSEAFILE_USER: cobertosrobertos@gmail.com
      # This needs to be the output of `docker container run rclone/rclone obscure [PASSWORD]`
      RCLONE_CONFIG_BATTOSEAFILE_PASS: $SEAFILE_OBSCURED_PASSWORD
    command:
      # [command] [opts] [source] [dest]
      # https://rclone.org/commands/rclone_sync/
      - "sync"
      - "-vv"
      - "battoseafile:"
      - "/backup-dest"
    # command: rcd --rc-web-gui --rc-addr :5572 --rc-user jsmith --rc-pass mypassword
    # ports:
    #   - "5572:5572"
    volumes:
      - /mnt/ssd/batto-backup:/backup-dest
    #  - /home/jsmith/docker/rclone_rclone:/logs
    # environment:
    #   - PHP_TZ=Europe/London
    #   - PUID=1000
    #   - PGID=1000


  # TODO: Readd
  # Netdata monitoring
  # Wired up with docker-socket-proxy for container names
  # https://learn.netdata.cloud/docs/agent/packaging/docker#docker-container-names-resolution
  # TODO: Add collectors for supported services like
  # web logs (nginx), traefik, uWSGI, DBs (postgres, mariadb), icecast
  # dockerd (container health stats) 
  # netdata:
  #   image: netdata/netdata
  #   restart: always
  #   hostname: nd.b4t.to
  #   container_name: netdata
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   volumes:
  #     - /etc/passwd:/host/etc/passwd:ro
  #     - /etc/group:/host/etc/group:ro
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /etc/os-release:/host/etc/os-release:ro
  #   environment:
  #     DOCKER_HOST: docker-socket-proxy:2375
  #   networks:
  #     - traefik-proxy
  #     - docker-socket-proxy-internal
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.netdata.loadbalancer.server.port=19999"
  #     - "traefik.http.routers.netdata.rule=Host(`nd.b4t.to`)"
  #     - "traefik.http.routers.netdata.tls.certresolver=cloudflarednsresolver"
  #     - "traefik.http.routers.netdata.middlewares=http-compress"


  # Networking
  # TODO: Split this into multiple files or something... this is getting bad...
  # TODO: Specify the TLS ciphers explicitly?
  # https://github.com/Holi0317/homeserver-compose/blob/master/traefik/build/config/tls.toml
  # If you're ever having trouble with certificates, make sure you're using the staging
  # CA to debug. Also you can delete part or all of the acme.json file and then restart
  # traefik to get certificates to regenerate manually
#   traefik:
#     image: traefik:v2.2
#     container_name: traefik
#     restart: always
#     command:
#       # I could also use a traefik.yml and mount it to 
#       #   - ./traefik/traefik.yml:/etc/traefik/traefik.yml
#       # but ehhhh, I'll do that if this really becomes unweildy

#       - "--log.level=DEBUG"

#       # Turn on dashboard, configured to use Basic Auth in this contains labels
#       # https://docs.traefik.io/operations/dashboard/#secure-mode
#       - "--api.dashboard=true" # Defaults to port 8080

#       - "--providers.docker=true"
#       - "--providers.docker.exposedbydefault=false"
#       # This needs to be the FULL NETWORK NAME. If not, Traefil will sometimes work
#       # and sometimes give a bad gateway for containers (randomly every run)
#       # https://stackoverflow.com/a/46439598/2759427
#       - "--providers.docker.network=batto-cave_traefik-proxy"

#       - "--entrypoints.http.address=:80"
#       - "--entrypoints.https.address=:443"

#       - "--certificatesresolvers.cloudflarednsresolver.acme.email=cobertosrobertos@gmail.com"
#       - "--certificatesresolvers.cloudflarednsresolver.acme.storage=/data/acme.json"
#       - "--certificatesresolvers.cloudflarednsresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
#       # - "--certificatesresolvers.cloudflarednsresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
#       - "--certificatesresolvers.cloudflarednsresolver.acme.dnschallenge.provider=cloudflare"
#     volumes:
#       - "/opt/batto-cave/traefik:/data"
#       - "/var/run/docker.sock:/var/run/docker.sock:ro"
#     ports:
#       - "80:80"
#       - "443:443"
#     environment:
#       CF_DNS_API_TOKEN: '${CLOUDFLARE_DDNS_B4T_TO_API_KEY}'
#     networks:
#       - traefik-proxy
#     labels:
#       - "traefik.enable=true"
#       #== Middlewares ==
#       # LAN IP only
#       - "traefik.http.middlewares.lan-only.ipwhitelist.sourcerange=127.0.0.1/32, 192.168.0.0/24"
#       # Gzip
#       - "traefik.http.middlewares.http-compress.compress=true"
#       # Basic auth
#       - "traefik.http.middlewares.auth.basicauth.users=$TRAEFIK_HTPASSWD"
#       # https redirect
#       - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
#       - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
#       # Security - TODO: More research on a couple of these, like stsSeconds
#       # https://github.com/Holi0317/homeserver-compose/blob/master/traefik/build/config/middlewares.toml
#       #- "traefik.http.middlewares.secure_head.headers.accessControlAllowOrigin=null"
#       #- "traefik.http.middlewares.secure_head.headers.sslRedirect=true"
#       #- "traefik.http.middlewares.secure_head.headers.contentTypeNosniff=true"
#       #- "traefik.http.middlewares.secure_head.headers.browserXssFilter=true"
#       #- "traefik.http.middlewares.secure_head.headers.contentSecurityPolicy=upgrade-insecure-requests"
#       #- "traefik.http.middlewares.secure_head.headers.stsSeconds=31536000"
#       #- "traefik.http.middlewares.secure_head.headers.framedeny=true"
#       #- "traefik.http.middlewares.secure_head.headers.customResponseHeaders.Referrer-Policy=no-referrer"
#       #- "traefik.http.middlewares.secure_head.headers.customResponseHeaders.X-Powered-By=null"
      
#       # Global redirect all http to https
#       - "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
#       - "traefik.http.routers.http-catchall.entrypoints=http"
#       - "traefik.http.routers.http-catchall.middlewares=https-redirect"

#       # == Traefik Dashboard config (traefik-ception) ==
#       - "traefik.http.routers.api.rule=Host(`traefik.b4t.to`) || Host(`traefik.localhost`)"
#       - "traefik.http.routers.api.service=api@internal"
#       - "traefik.http.routers.api.middlewares=lan-only,auth"

#   # Proxy for docker.sock
#   docker-socket-proxy:
#     image: tecnativa/docker-socket-proxy
#     container_name: docker-socket-proxy
#     networks:
#       - docker-socket-proxy-internal
#     volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#     environment:
#       - CONTAINERS=1
#     healthcheck:
#       #Check that the DNS resolves to this boxes external IP address
#       test: ["CMD-SHELL", "wget -q localhost:2375/_ping -O /dev/null"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

# networks:
#   traefik-proxy:
#   # Even though Docker will automatically create a bridge network for us, it's
#   # better to create one ourselves
#   # https://docs.docker.com/network/bridge/#differences-between-user-defined-bridges-and-the-default-bridge
#   docker-socket-proxy-internal:
#     internal: true

